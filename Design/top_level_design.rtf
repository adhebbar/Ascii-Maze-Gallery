{\rtf1\ansi\ansicpg1252\cocoartf1404\cocoasubrtf470
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 Top level design:\
\
I created 3 modules:\
1)	my_image: this does the ASCII image processing, including adding messages and converting an arbitrary picture to ASCII character format. This module makes use of PIL (Python imaging library)\
2)	maze: this modules includes functions that use backtracking to generate a random maze, make it difficult and generate a jpeg image of a maze given its current state (which I used to create the mini-map)\
3)	AsciiGalleryMaze: This uses panda3D to create a 3D version of the maze generated by the previous module. It also contains all the features of the game, including movement, rendering, levels, etc.\
\
User interface: usage of pictures  to solve the maze ties up two arguably unrelated concepts, enhancing the user experience. Numerous comedic splash screens were added to engage the user. the mini map ensures that the user doesn\'92t feel too lost while navigating the maze.\
\
\
Suggestions for improvement:\
better control options (mouse instead of arrow keys)\
mah=ke mamme load faster\
pause }